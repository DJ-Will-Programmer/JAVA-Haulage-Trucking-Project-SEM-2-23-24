//Tianna Lue-Lim: 2109411
package apgrouproject;

import java.time.LocalDate;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.swing.JOptionPane;

import org.hibernate.Session;
import org.hibernate.Transaction;

import dbConnection.SessionFactoryBuilder;

/*hibernate mapping*/
@Entity
@Table(name="maintenance") //table name in db

public class MaintenanceWorker extends Contractor
{
	@Column(name="maintenanceSpecialization")
	private String specialization; //specialization/type of maintenance worker: electrical, janitor, technician, mechanic
	
	//default constructor
	public MaintenanceWorker()
	{
		super();
		specialization = "";
	}
	
	//primary constructor
	public MaintenanceWorker(String staffId, String firstName, String lastName, LocalDate dateOfBirth, String telephone, String email, 
			String officeLocation, String position, String address1, String address2, String postOffice, String parish, String status, double salary, 
			LocalDate start, LocalDate end, String specialization)
	{
		super(staffId, firstName, lastName, dateOfBirth, telephone, email, 
				officeLocation, position, address1, address2, postOffice, parish, status, salary, start, end);
		this.specialization = specialization;
	}
	
	//copy constructor
	public MaintenanceWorker(MaintenanceWorker maintenanceWorker)
	{
		super(maintenanceWorker.staffId, maintenanceWorker.firstName, maintenanceWorker.lastName, maintenanceWorker.dateOfBirth,
				maintenanceWorker.telephone, maintenanceWorker.email, maintenanceWorker.officeLocation, maintenanceWorker.position, 
				maintenanceWorker.address1, maintenanceWorker.address2, maintenanceWorker.postOffice, maintenanceWorker.parish, 
				maintenanceWorker.status, maintenanceWorker.salary, maintenanceWorker.contractStartDate, maintenanceWorker.contractEndDate);
		this.specialization = maintenanceWorker.specialization;
	}

	/*accessor and mutator*/
	public String getSpecialization() 
	{
		return specialization;
	}
	public void setSpecialization(String specialization)
	{
		this.specialization = specialization;
	}
	
	/*toString method*/
	@Override
	public String toString()
	{
		return super.toString() + "\nSpecialization:\t\t\t" + specialization;
	}

	/*add specialization to maintenance types in the database*/
	public void addSpecialization(MaintenanceWorker staff, String specialization)
	{
		Session session = SessionFactoryBuilder.getSessionFactory().openSession();
		Transaction transaction = null;
			
		try
		{
			transaction = session.beginTransaction();
			staff.setSpecialization(specialization);
				
			session.update(staff); //update staff table with new data
			transaction.commit();
				
			System.out.println(staff.toString());
				
				JOptionPane.showMessageDialog(null, "Maintenance specialization has been set.", "Success.", JOptionPane.INFORMATION_MESSAGE);
			}
			catch (RuntimeException re)
			{
				if(transaction != null)
				{
					transaction.rollback();
				}
			}
			catch (Exception ex)
			{
				if(transaction != null)
				{
					transaction.rollback();
				}
				System.err.println("Error setting specialization: " + ex.getMessage());
			}
			finally
			{
				session.close();
			}
	}
}
